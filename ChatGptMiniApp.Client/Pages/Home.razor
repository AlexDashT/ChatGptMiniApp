@page "/"
@using ChatGptMiniApp.Shared.Helper
@using Markdig
@rendermode InteractiveAuto
@inject ChatService ChatService

<PageTitle>Home</PageTitle>
<h3>Welcome to the Location Map</h3>

<div class="container mt-3">
    <div class="card">
        <div class="card-header">
            Chat
        </div>
        <div class="card-body">
            <ul class="list-group mb-3">
                @foreach (var message in messages)
                {
                    <li class="list-group-item">
                        <strong>@message.User:</strong> @((MarkupString)message.Text)
                    </li>
                }
            </ul>
            <input @bind="userMessage" @bind:event="oninput" class="form-control" placeholder="Type a message..." />
            <button class="btn btn-primary mt-2" @onclick="SendMessage">Send</button>
        </div>
    </div>
</div>

@code {
    private string userMessage;
    private List<Message> messages = new();

    private async Task SendMessage()
    {
        messages.Add(new Message { User = "You", Text = userMessage });
        messages.Add(new Message { User = "Bot", Text = "" });

        
        var allMesage = ""; 
        await ChatService.StreamMessage(ChatId, userMessage, botMessage =>
        {
            InvokeAsync(() =>
            {               
                allMesage += botMessage;
                var result = TextHelper.MarkupToHtml(allMesage.Replace("<br>", "\n"));
                if (TextHelper.IsLikelyPersian(result))
                {
                    result = $"<div dir=\"rtl\" style=\"text-align: right\" >{ result}</ div > ";
                }
                messages.Last().Text = result;
                Task.Delay(1000);
                StateHasChanged();
            });
        }
        , botMessage =>
    {
        InvokeAsync(() =>
    {
        ChatId = Guid.Parse(botMessage);
    });
    });

    userMessage = string.Empty;
    }

    private class Message
    {
        public string User { get; set; }
        public string Text { get; set; }
    }

    [Parameter]
    public Guid ChatId { get; set; } = Guid.Empty;
}

